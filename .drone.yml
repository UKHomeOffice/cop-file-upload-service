pipeline:
  synch_dev_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=dev
    secrets:
      - source: DEV_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: DEV_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

#  synch_staging_secrets:
#    image: quay.io/ukhomeofficedigital/cop-secrets
#    environment:
#      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
#      - DEPLOY_ENV=staging
#    secrets:
#      - source: STAGING_DRONE_AWS_ACCESS_KEY_ID
#        target: AWS_ACCESS_KEY_ID
#      - source: STAGING_DRONE_AWS_SECRET_ACCESS_KEY
#        target: AWS_SECRET_ACCESS_KEY
#      - source: DRONE_PUBLIC_TOKEN
#        target: DRONE_TOKEN
#    when:
#      environment: secrets
#      event: deployment
#
#  synch_production_secrets:
#    image: quay.io/ukhomeofficedigital/cop-secrets
#    environment:
#      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
#      - DEPLOY_ENV=production
#    secrets:
#      - source: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
#        target: AWS_ACCESS_KEY_ID
#      - source: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
#        target: AWS_SECRET_ACCESS_KEY
#      - source: DRONE_PUBLIC_TOKEN
#        target: DRONE_TOKEN
#    when:
#      environment: secrets
#      event: deployment

  test:
      image: node:11
      commands:
        - npm install
        - npm run linter
        - npm run test:unit
        - npm run coverage
      when:
        event:
        - push
        - pull_request

#  sonar-scanner:
#    image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.1
#    when:
#      status:
#        - failure
#        - success
#      event:
#        - push
#        - pull_request

## Image building
  build:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t cop-file-upload-service:$${DRONE_COMMIT_SHA} .
    when:
      event: push

## Vulnerability Scanning
#  vulnerability-scan:
#    image: quay.io/ukhomeofficedigital/anchore-submission:latest
#    dockerfile: Dockerfile
#    image_name: cop-file-upload-service:${DRONE_COMMIT_SHA}
#    local_image: true
#    tolerate: low
#    fail_on_detection: false
#    when:
#      branch: master
#      event: push

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
      - source: QUAY_USERNAME
        target: DOCKER_USERNAME
      - source: QUAY_PASSWORD
        target: DOCKER_PASSWORD
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-file-upload-service
    tags:
      - ${DRONE_COMMIT_SHA}
    when:
      event: push
      branch: master

  deploy_to_dev:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: DEV_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: DEV_KUBE_SERVER
        target: KUBE_SERVER
      - source: DEV_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: DEV_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: DEV_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: PROTOCOL_HTTPS
        target: PROTOCOL
      - source: DEV_WHITELIST
        target: WHITELIST
      - source: DEV_WWW_URL
        target: WWW_URL
      - source: DEV_FILE_UPLOAD_SERVICE_AWS_SSE_KMS_KEY_ID
        target: AWS_SSE_KMS_KEY_ID
      - source: DEV_FILE_UPLOAD_SERVICE_AWS_ACCESS_KEY
        target: AWS_ACCESS_KEY
      - source: DEV_FILE_UPLOAD_SERVICE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DEV_FILE_UPLOAD_SERVICE_AWS_BUCKET
        target: AWS_BUCKET
      - source: FILE_UPLOAD_SERVICE_KEYCLOAK_CLIENT_ID
        target: FILE_UPLOAD_SERVICE_KEYCLOAK_CLIENT_ID
      - source: FILE_UPLOAD_SERVICE_NAME
        target: FILE_UPLOAD_SERVICE_NAME
      - source: FILE_UPLOAD_SERVICE_PORT
        target: FILE_UPLOAD_SERVICE_PORT
      - source: FILE_UPLOAD_SERVICE_URL
        target: FILE_UPLOAD_SERVICE_URL
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
    commands:
      - export IMAGE_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/secret.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      branch:
        - master
      event:
        - push

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
        {{build.link}}
      {{else}}
        *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*
        {{build.link}}
      {{/build.deployTo}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]
