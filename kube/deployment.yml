---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.FILE_UPLOAD_SERVICE_NAME}}
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 33%
      maxSurge: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      name: {{.FILE_UPLOAD_SERVICE_NAME}}
  template:
    metadata:
      labels:
        name: {{.FILE_UPLOAD_SERVICE_NAME}}
    spec:
      containers:
      - name: {{.FILE_UPLOAD_SERVICE_NAME}}-proxy
        image: "{{.NGINX_IMAGE}}:{{.NGINX_TAG}}"
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
             - SETUID
             - SETGID
        resources:
         limits:
          memory: "100Mi"
          cpu: "100m"
         requests:
          memory: "50Mi"
          cpu: "100m"
        env:
        - name: PROXY_SERVICE_HOST
          value: "127.0.0.1"
        - name: PROXY_SERVICE_PORT
          value: "8181"
        - name: SERVER_CERT
          value: "/certs/tls.pem"
        - name: SERVER_KEY
          value: "/certs/tls-key.pem"
        - name: SSL_CIPHERS
          value: "ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:AES256+EDH:!aNULL"
        - name: ENABLE_UUID_PARAM
          value: "FALSE"
        - name: NAXSI_USE_DEFAULT_RULES
          value: "FALSE"
        - name: PORT_IN_HOST_HEADER
          value: "FALSE"
        - name: ERROR_REDIRECT_CODES
          value: "599"
        - name: ADD_NGINX_SERVER_CFG
          value: 'gzip off; location = /reload { allow 127.0.0.1; deny all; content_by_lua_block { os.execute("touch /tmp/nginx-reload-triggered; /usr/local/openresty/nginx/sbin/nginx -s reload; touch /tmp/nginx-reload-complete;") } }'
        - name: ADD_NGINX_LOCATION_CFG
          value: |
            gzip off;
            proxy_buffer_size         128k;
            proxy_buffers             4 256k;
            proxy_busy_buffers_size   256k;
            add_header       X-Frame-Options 'ALLOW-FROM {{.PROTOCOL}}{{.WWW_URL}}' always;
        - name: LOG_FORMAT_NAME
          value: "json"
        - name: NO_LOGGING_URL_PARAMS
          value: "false"
        - name: NO_LOGGING_BODY
          value: "false"
        - name: NO_LOGGING_RESPONSE
          value: "false"
        - name: STATSD_METRICS
          value: "FALSE"
        ports:
        - name: https
          containerPort: 10443
        volumeMounts:
          - name: certs
            mountPath: /certs
      - name: clamav
        image: quay.io/ukhomeofficedigital/clamav:v1.6.1
        ports:
          - containerPort: 3310
        resources:
          requests:
            memory: "2048M"
            cpu: "1"
          limits:
            memory: "4096M"
            cpu: "1"
      - name: clamav-api
        image: quay.io/ukhomeofficedigital/docker-clamav-rest:1.0.0
        ports:
          - containerPort: 8080
        env:
           - name: CLAMAV_HOST
             value: localhost
        resources:
          requests:
            memory: "2048M"
            cpu: "1"
          limits:
            memory: "4096M"
            cpu: "1"

      - name: {{.FILE_UPLOAD_SERVICE_NAME}}
        image: quay.io/ukhomeofficedigital/cop-file-upload-service:{{.IMAGE_TAG}}
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{.FILE_UPLOAD_SERVICE_PORT}}
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{.FILE_UPLOAD_SERVICE_PORT}}
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
        ports:
          - name: {{.FILE_UPLOAD_SERVICE_NAME}}
            containerPort: {{.FILE_UPLOAD_SERVICE_PORT}}
        volumeMounts:
          - name: bundle
            mountPath: /etc/ssl/certs
            readOnly: true
        env:
        - name: VIRUS_SCAN_HOST
          value: localhost
        - name: AUTH_CLIENT_ID
          value: {{.FILE_UPLOAD_SERVICE_KEYCLOAK_CLIENT_ID}}
        - name: AUTH_URL
          value: {{.KEYCLOAK_URL}}
        - name: AUTH_REALM
          value: {{.KEYCLOAK_REALM}}
        - name: AWS_SSE_KMS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{.FILE_UPLOAD_SERVICE_NAME}}
              key: awsSseKmsKeyId
        - name: AWS_BUCKET
          valueFrom:
            secretKeyRef:
              name: {{.FILE_UPLOAD_SERVICE_NAME}}
              key: awsS3Bucket
        - name: AWS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{.FILE_UPLOAD_SERVICE_NAME}}
              key: awsAccessKey
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{.FILE_UPLOAD_SERVICE_NAME}}
              key: awsSecretAccessKey
      volumes:
      - name: bundle
        configMap:
          name: bundle
      - name: certs
        emptyDir: {}
